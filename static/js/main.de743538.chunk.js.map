{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","_useState2","_slicedToArray","bestScore","setBestScore","_useState3","_useState4","cardsList","setCardsList","_useState5","_useState6","seenCards","setSeenCards","changeBestScore","e","target","closest","element","src","slice","includes","length","updateSeenCards","concat","_toConsumableArray","console","log","randomImages","random2","random1","Math","floor","random","element1","element2","newCardsList","splice","unshift","push","_jsxs","_Fragment","children","className","_jsx","onClick","alt","id","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"6NAAe,I,YC0GAA,MA5Ff,WAEE,IAAAC,EAAkCC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAAtCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,EAAkCL,mBAAS,CAAC,eAAgB,UAAW,cAAe,eAAgB,aAAc,eAAgB,cAAe,iBAAkB,eAAcM,EAAAJ,YAAAG,EAAA,GAA5KE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAAkCT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAExBG,EAAkB,SAACC,GACvB,GAAgC,OAA5BA,EAAEC,OAAOC,QAAQ,OACnB,MAAQ,KAEV,IAAMC,EAAWH,EAAEC,OAAOC,QAAQ,OAAOE,IAAKC,MAAM,IAEhDR,EAAUS,SAASH,GACrBb,EAAaD,GACJQ,EAAUU,QAAUlB,GAC7BC,EAAaO,EAAUU,OAAS,EAQpC,EAGMC,EAAkB,SAACR,GACvB,GAAgC,OAA5BA,EAAEC,OAAOC,QAAQ,OACnB,MAAQ,KAEV,IAAMC,EAAWH,EAAEC,OAAOC,QAAQ,OAAOE,IAAKC,MAAM,IAChDR,EAAUS,SAASH,GACrBL,EAAa,IAGbA,EAAa,GAADW,OAAAC,YAAKb,GAAS,CAAEM,KAG9BQ,QAAQC,IAAIf,EACd,EAEMgB,EAAe,SAACb,GACpB,GAAgC,OAA5BA,EAAEC,OAAOC,QAAQ,OACnB,MAAQ,KAEV,IAEIY,EAFAC,EAAUC,KAAKC,MAAwB,EAAjBD,KAAKE,UAC3BC,EAAW1B,EAAUsB,GAGzB,GACED,EAAUE,KAAKC,MAAwB,EAAjBD,KAAKE,gBACpBH,IAAYD,GAIrB,IAAIM,EAAW3B,EAAUqB,GAGnBO,EAAYX,YAAOjB,GACzB4B,EAAaC,OAAOP,EAAS,GAEzBA,EAAUD,EACZO,EAAaC,OAAOR,EAAU,EAAG,GAEjCO,EAAaC,OAAOR,EAAS,GAG/BO,EAAaE,QAAQJ,GACrBE,EAAaG,KAAKJ,GAElB1B,EAAa2B,EACf,EAEA,OACEI,eAAAC,WAAA,CAAAC,SAAA,CACEF,eAAA,OAAKG,UAAU,YAAWD,SAAA,CACxBE,cAAA,OAAKC,QAAS,SAAC9B,GAAQa,EAAab,GAAIQ,EAAgBR,GAAID,EAAgBC,EAAG,EAAE2B,SAACE,cAAA,OAAKE,IAAI,MAAM3B,IAAKX,EAAU,OAChHoC,cAAA,OAAKC,QAAS,SAAC9B,GAAQa,EAAab,GAAIQ,EAAgBR,GAAID,EAAgBC,EAAG,EAAE2B,SAACE,cAAA,OAAKE,IAAI,MAAM3B,IAAKX,EAAU,OAChHoC,cAAA,OAAKC,QAAS,SAAC9B,GAAQa,EAAab,GAAIQ,EAAgBR,GAAID,EAAgBC,EAAG,EAAE2B,SAACE,cAAA,OAAKE,IAAI,MAAM3B,IAAKX,EAAU,OAChHoC,cAAA,OAAKC,QAAS,SAAC9B,GAAQa,EAAab,GAAIQ,EAAgBR,GAAID,EAAgBC,EAAG,EAAE2B,SAACE,cAAA,OAAKE,IAAI,MAAM3B,IAAKX,EAAU,OAChHoC,cAAA,OAAKC,QAAS,SAAC9B,GAAQa,EAAab,GAAIQ,EAAgBR,GAAID,EAAgBC,EAAG,EAAE2B,SAACE,cAAA,OAAKE,IAAI,MAAM3B,IAAKX,EAAU,OAChHoC,cAAA,OAAKC,QAAS,SAAC9B,GAAQa,EAAab,GAAIQ,EAAgBR,GAAID,EAAgBC,EAAG,EAAE2B,SAACE,cAAA,OAAKE,IAAI,MAAM3B,IAAKX,EAAU,OAChHoC,cAAA,OAAKC,QAAS,SAAC9B,GAAQa,EAAab,GAAIQ,EAAgBR,GAAID,EAAgBC,EAAG,EAAE2B,SAACE,cAAA,OAAKE,IAAI,MAAM3B,IAAKX,EAAU,OAChHoC,cAAA,OAAKC,QAAS,SAAC9B,GAAQa,EAAab,GAAIQ,EAAgBR,GAAID,EAAgBC,EAAG,EAAE2B,SAACE,cAAA,OAAKE,IAAI,MAAM3B,IAAKX,EAAU,OAChHoC,cAAA,OAAKC,QAAS,SAAC9B,GAAQa,EAAab,GAAIQ,EAAgBR,GAAID,EAAgBC,EAAG,EAAE2B,SAACE,cAAA,OAAKE,IAAI,MAAM3B,IAAKX,EAAU,UAElHgC,eAAA,OAAKO,GAAG,UAASL,SAAA,CAAE,mBAAiB9B,EAAUU,UAC9CkB,eAAA,OAAKO,GAAG,OAAML,SAAA,CAAC,eAAatC,OAGlC,EC5Fe4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,SAAAC,GAAkD,IAA/CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,EACV,GAEJ,ECJaS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlB,cAACmB,IAAMC,WAAU,CAAAtB,SACfE,cAAC7C,EAAG,OAORiD,G","file":"static/js/main.de743538.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\n\nimport './App.css';\nimport React, { Component, useState, useEffect } from \"react\";\n\n\n\n\n\n////////\n\n\n\n\nfunction App() {\n\n  const [bestScore, setBestScore] = useState(0);\n  const [cardsList, setCardsList] = useState([\"/gokussj.png\", \"/17.png\", \"/chuck.jpeg\", \"/cloudy.jpeg\", \"/gohan.png\", \"/songoku.png\", \"/sunny.jpeg\", \"/vegetassb.png\", \"/Yoshi.png\"]);\n  const [seenCards, setSeenCards] = useState([])\n\n  const changeBestScore = (e) => {\n    if (e.target.closest(\"img\") === null) {\n      return (\"ok\")\n    }\n    const element = (e.target.closest(\"img\").src).slice(21);\n\n    if (seenCards.includes(element)) {\n      setBestScore(bestScore)\n    } else if (seenCards.length >= bestScore) {\n      setBestScore(seenCards.length + 1);\n\n    };\n\n\n\n\n\n  };\n\n\n  const updateSeenCards = (e) => {\n    if (e.target.closest(\"img\") === null) {\n      return (\"ok\")\n    }\n    const element = (e.target.closest(\"img\").src).slice(21)\n    if (seenCards.includes(element)) {\n      setSeenCards([])\n\n    } else {\n      setSeenCards([...seenCards, element]);\n    }\n\n    console.log(seenCards)\n  };\n\n  const randomImages = (e) => {\n    if (e.target.closest(\"img\") === null) {\n      return (\"ok\")\n    }\n    let random1 = Math.floor((Math.random()) * 9); ///6\n    let element1 = cardsList[random1]; ///sunny.jpeg\n    let random2;\n\n    do {\n      random2 = Math.floor((Math.random()) * 9)\n    } while (random1 === random2);\n\n\n\n    let element2 = cardsList[random2]; /// gohan\n\n\n    const newCardsList = [...cardsList];\n    newCardsList.splice(random1, 1);\n\n    if (random1 < random2) {\n      newCardsList.splice(random2 - 1, 1);\n    } else {\n      newCardsList.splice(random2, 1)\n    }\n\n    newCardsList.unshift(element1);\n    newCardsList.push(element2);\n\n    setCardsList(newCardsList);\n  };\n\n  return (\n    <>\n      <div className=\"cardBoard\">\n        <div onClick={(e) => { randomImages(e); updateSeenCards(e); changeBestScore(e) }}><img alt=\"ftg\" src={cardsList[0]} /></div>\n        <div onClick={(e) => { randomImages(e); updateSeenCards(e); changeBestScore(e) }}><img alt=\"ftg\" src={cardsList[1]} /></div>\n        <div onClick={(e) => { randomImages(e); updateSeenCards(e); changeBestScore(e) }}><img alt=\"ftg\" src={cardsList[2]} /></div>\n        <div onClick={(e) => { randomImages(e); updateSeenCards(e); changeBestScore(e) }}><img alt=\"ftg\" src={cardsList[3]} /></div>\n        <div onClick={(e) => { randomImages(e); updateSeenCards(e); changeBestScore(e) }}><img alt=\"ftg\" src={cardsList[4]} /></div>\n        <div onClick={(e) => { randomImages(e); updateSeenCards(e); changeBestScore(e) }}><img alt=\"ftg\" src={cardsList[5]} /></div>\n        <div onClick={(e) => { randomImages(e); updateSeenCards(e); changeBestScore(e) }}><img alt=\"ftg\" src={cardsList[6]} /></div>\n        <div onClick={(e) => { randomImages(e); updateSeenCards(e); changeBestScore(e) }}><img alt=\"ftg\" src={cardsList[7]} /></div>\n        <div onClick={(e) => { randomImages(e); updateSeenCards(e); changeBestScore(e) }}><img alt=\"ftg\" src={cardsList[8]} /></div>\n      </div>\n      <div id=\"current\" >Current score : {seenCards.length}</div>\n      <div id=\"best\">Best Score: {bestScore}</div>\n    </>\n  )\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}